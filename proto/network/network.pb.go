// Code generated by protoc-gen-go. DO NOT EDIT.
// source: network.proto

package network

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IdentityMsg_Role int32

const (
	IdentityMsg_VALIDATOR IdentityMsg_Role = 0
	IdentityMsg_FULL_NODE IdentityMsg_Role = 1
)

var IdentityMsg_Role_name = map[int32]string{
	0: "VALIDATOR",
	1: "FULL_NODE",
}

var IdentityMsg_Role_value = map[string]int32{
	"VALIDATOR": 0,
	"FULL_NODE": 1,
}

func (x IdentityMsg_Role) String() string {
	return proto.EnumName(IdentityMsg_Role_name, int32(x))
}

func (IdentityMsg_Role) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8571034d60397816, []int{6, 0}
}

// A `PeerInfo` represents the network address(es) of a Peer.
type PeerInfo struct {
	// Monotonically increasing incarnation number used to allow peers to issue
	// updates to their `PeerInfo` and prevent attackers from propagating old
	// `PeerInfo`s. This is usually a timestamp.
	Epoch uint64 `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	// Network addresses this peer can be reached at. An address is a serialized
	// [multiaddr](https://multiformats.io/multiaddr/).
	Addrs                [][]byte `protobuf:"bytes,2,rep,name=addrs,proto3" json:"addrs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeerInfo) Reset()         { *m = PeerInfo{} }
func (m *PeerInfo) String() string { return proto.CompactTextString(m) }
func (*PeerInfo) ProtoMessage()    {}
func (*PeerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8571034d60397816, []int{0}
}

func (m *PeerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerInfo.Unmarshal(m, b)
}
func (m *PeerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerInfo.Marshal(b, m, deterministic)
}
func (m *PeerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerInfo.Merge(m, src)
}
func (m *PeerInfo) XXX_Size() int {
	return xxx_messageInfo_PeerInfo.Size(m)
}
func (m *PeerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PeerInfo proto.InternalMessageInfo

func (m *PeerInfo) GetEpoch() uint64 {
	if m != nil {
		return m.Epoch
	}
	return 0
}

func (m *PeerInfo) GetAddrs() [][]byte {
	if m != nil {
		return m.Addrs
	}
	return nil
}

// A `PeerInfo` authenticated by the peer's root `network_signing_key` stored
// on-chain.
type SignedPeerInfo struct {
	// A serialized `PeerInfo`.
	PeerInfo []byte `protobuf:"bytes,1,opt,name=peer_info,json=peerInfo,proto3" json:"peer_info,omitempty"`
	// A signature over the above serialzed `PeerInfo`, signed by the validator's
	// `network_signing_key` referred to by the `peer_id` account address.
	Signature            []byte   `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignedPeerInfo) Reset()         { *m = SignedPeerInfo{} }
func (m *SignedPeerInfo) String() string { return proto.CompactTextString(m) }
func (*SignedPeerInfo) ProtoMessage()    {}
func (*SignedPeerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8571034d60397816, []int{1}
}

func (m *SignedPeerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignedPeerInfo.Unmarshal(m, b)
}
func (m *SignedPeerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignedPeerInfo.Marshal(b, m, deterministic)
}
func (m *SignedPeerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignedPeerInfo.Merge(m, src)
}
func (m *SignedPeerInfo) XXX_Size() int {
	return xxx_messageInfo_SignedPeerInfo.Size(m)
}
func (m *SignedPeerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SignedPeerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SignedPeerInfo proto.InternalMessageInfo

func (m *SignedPeerInfo) GetPeerInfo() []byte {
	if m != nil {
		return m.PeerInfo
	}
	return nil
}

func (m *SignedPeerInfo) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

// Discovery information relevant to public full nodes and clients.
type FullNodePayload struct {
	// Monotonically increasing incarnation number used to allow peers to issue
	// updates to their `FullNodePayload` and prevent attackers from propagating
	// old `FullNodePayload`s. This is usually a timestamp.
	Epoch uint64 `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	// The DNS domain name other public full nodes should query to get this
	// validator's list of full nodes.
	DnsSeedAddr          []byte   `protobuf:"bytes,2,opt,name=dns_seed_addr,json=dnsSeedAddr,proto3" json:"dns_seed_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FullNodePayload) Reset()         { *m = FullNodePayload{} }
func (m *FullNodePayload) String() string { return proto.CompactTextString(m) }
func (*FullNodePayload) ProtoMessage()    {}
func (*FullNodePayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_8571034d60397816, []int{2}
}

func (m *FullNodePayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FullNodePayload.Unmarshal(m, b)
}
func (m *FullNodePayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FullNodePayload.Marshal(b, m, deterministic)
}
func (m *FullNodePayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FullNodePayload.Merge(m, src)
}
func (m *FullNodePayload) XXX_Size() int {
	return xxx_messageInfo_FullNodePayload.Size(m)
}
func (m *FullNodePayload) XXX_DiscardUnknown() {
	xxx_messageInfo_FullNodePayload.DiscardUnknown(m)
}

var xxx_messageInfo_FullNodePayload proto.InternalMessageInfo

func (m *FullNodePayload) GetEpoch() uint64 {
	if m != nil {
		return m.Epoch
	}
	return 0
}

func (m *FullNodePayload) GetDnsSeedAddr() []byte {
	if m != nil {
		return m.DnsSeedAddr
	}
	return nil
}

// A signed `FullNodePayload`.
type SignedFullNodePayload struct {
	// A serialized `FullNodePayload`.
	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	// A signature over `payload` signed by the validator's `network_signing_key`
	// referred to by the `peer_id` account address.
	Signature            []byte   `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignedFullNodePayload) Reset()         { *m = SignedFullNodePayload{} }
func (m *SignedFullNodePayload) String() string { return proto.CompactTextString(m) }
func (*SignedFullNodePayload) ProtoMessage()    {}
func (*SignedFullNodePayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_8571034d60397816, []int{3}
}

func (m *SignedFullNodePayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignedFullNodePayload.Unmarshal(m, b)
}
func (m *SignedFullNodePayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignedFullNodePayload.Marshal(b, m, deterministic)
}
func (m *SignedFullNodePayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignedFullNodePayload.Merge(m, src)
}
func (m *SignedFullNodePayload) XXX_Size() int {
	return xxx_messageInfo_SignedFullNodePayload.Size(m)
}
func (m *SignedFullNodePayload) XXX_DiscardUnknown() {
	xxx_messageInfo_SignedFullNodePayload.DiscardUnknown(m)
}

var xxx_messageInfo_SignedFullNodePayload proto.InternalMessageInfo

func (m *SignedFullNodePayload) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *SignedFullNodePayload) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

// A `Note` contains a validator's signed `PeerInfo` as well as a signed
// `FullNodePayload`, which provides relevant discovery info for public full
// nodes and clients.
type Note struct {
	// Id of the peer.
	PeerId []byte `protobuf:"bytes,1,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	// The validator node's signed `PeerInfo`.
	SignedPeerInfo *SignedPeerInfo `protobuf:"bytes,2,opt,name=signed_peer_info,json=signedPeerInfo,proto3" json:"signed_peer_info,omitempty"`
	// The validator node's signed `FullNodePayload`.
	SignedFullNodePayload *SignedFullNodePayload `protobuf:"bytes,3,opt,name=signed_full_node_payload,json=signedFullNodePayload,proto3" json:"signed_full_node_payload,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}               `json:"-"`
	XXX_unrecognized      []byte                 `json:"-"`
	XXX_sizecache         int32                  `json:"-"`
}

func (m *Note) Reset()         { *m = Note{} }
func (m *Note) String() string { return proto.CompactTextString(m) }
func (*Note) ProtoMessage()    {}
func (*Note) Descriptor() ([]byte, []int) {
	return fileDescriptor_8571034d60397816, []int{4}
}

func (m *Note) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Note.Unmarshal(m, b)
}
func (m *Note) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Note.Marshal(b, m, deterministic)
}
func (m *Note) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Note.Merge(m, src)
}
func (m *Note) XXX_Size() int {
	return xxx_messageInfo_Note.Size(m)
}
func (m *Note) XXX_DiscardUnknown() {
	xxx_messageInfo_Note.DiscardUnknown(m)
}

var xxx_messageInfo_Note proto.InternalMessageInfo

func (m *Note) GetPeerId() []byte {
	if m != nil {
		return m.PeerId
	}
	return nil
}

func (m *Note) GetSignedPeerInfo() *SignedPeerInfo {
	if m != nil {
		return m.SignedPeerInfo
	}
	return nil
}

func (m *Note) GetSignedFullNodePayload() *SignedFullNodePayload {
	if m != nil {
		return m.SignedFullNodePayload
	}
	return nil
}

// Discovery message exchanged as part of the discovery protocol.
// The discovery message sent by a peer consists of notes for all the peers the
// sending peer knows about.
type DiscoveryMsg struct {
	Notes                []*Note  `protobuf:"bytes,1,rep,name=notes,proto3" json:"notes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiscoveryMsg) Reset()         { *m = DiscoveryMsg{} }
func (m *DiscoveryMsg) String() string { return proto.CompactTextString(m) }
func (*DiscoveryMsg) ProtoMessage()    {}
func (*DiscoveryMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_8571034d60397816, []int{5}
}

func (m *DiscoveryMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscoveryMsg.Unmarshal(m, b)
}
func (m *DiscoveryMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscoveryMsg.Marshal(b, m, deterministic)
}
func (m *DiscoveryMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscoveryMsg.Merge(m, src)
}
func (m *DiscoveryMsg) XXX_Size() int {
	return xxx_messageInfo_DiscoveryMsg.Size(m)
}
func (m *DiscoveryMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscoveryMsg.DiscardUnknown(m)
}

var xxx_messageInfo_DiscoveryMsg proto.InternalMessageInfo

func (m *DiscoveryMsg) GetNotes() []*Note {
	if m != nil {
		return m.Notes
	}
	return nil
}

// Identity message exchanged as part of the Identity protocol.
type IdentityMsg struct {
	PeerId               []byte           `protobuf:"bytes,1,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	SupportedProtocols   [][]byte         `protobuf:"bytes,2,rep,name=supported_protocols,json=supportedProtocols,proto3" json:"supported_protocols,omitempty"`
	Role                 IdentityMsg_Role `protobuf:"varint,3,opt,name=role,proto3,enum=network.IdentityMsg_Role" json:"role,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *IdentityMsg) Reset()         { *m = IdentityMsg{} }
func (m *IdentityMsg) String() string { return proto.CompactTextString(m) }
func (*IdentityMsg) ProtoMessage()    {}
func (*IdentityMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_8571034d60397816, []int{6}
}

func (m *IdentityMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdentityMsg.Unmarshal(m, b)
}
func (m *IdentityMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdentityMsg.Marshal(b, m, deterministic)
}
func (m *IdentityMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdentityMsg.Merge(m, src)
}
func (m *IdentityMsg) XXX_Size() int {
	return xxx_messageInfo_IdentityMsg.Size(m)
}
func (m *IdentityMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_IdentityMsg.DiscardUnknown(m)
}

var xxx_messageInfo_IdentityMsg proto.InternalMessageInfo

func (m *IdentityMsg) GetPeerId() []byte {
	if m != nil {
		return m.PeerId
	}
	return nil
}

func (m *IdentityMsg) GetSupportedProtocols() [][]byte {
	if m != nil {
		return m.SupportedProtocols
	}
	return nil
}

func (m *IdentityMsg) GetRole() IdentityMsg_Role {
	if m != nil {
		return m.Role
	}
	return IdentityMsg_VALIDATOR
}

// Ping message sent as liveness probe.
type Ping struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ping) Reset()         { *m = Ping{} }
func (m *Ping) String() string { return proto.CompactTextString(m) }
func (*Ping) ProtoMessage()    {}
func (*Ping) Descriptor() ([]byte, []int) {
	return fileDescriptor_8571034d60397816, []int{7}
}

func (m *Ping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ping.Unmarshal(m, b)
}
func (m *Ping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ping.Marshal(b, m, deterministic)
}
func (m *Ping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ping.Merge(m, src)
}
func (m *Ping) XXX_Size() int {
	return xxx_messageInfo_Ping.Size(m)
}
func (m *Ping) XXX_DiscardUnknown() {
	xxx_messageInfo_Ping.DiscardUnknown(m)
}

var xxx_messageInfo_Ping proto.InternalMessageInfo

// Pong message sent as response to liveness probe.
type Pong struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pong) Reset()         { *m = Pong{} }
func (m *Pong) String() string { return proto.CompactTextString(m) }
func (*Pong) ProtoMessage()    {}
func (*Pong) Descriptor() ([]byte, []int) {
	return fileDescriptor_8571034d60397816, []int{8}
}

func (m *Pong) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pong.Unmarshal(m, b)
}
func (m *Pong) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pong.Marshal(b, m, deterministic)
}
func (m *Pong) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pong.Merge(m, src)
}
func (m *Pong) XXX_Size() int {
	return xxx_messageInfo_Pong.Size(m)
}
func (m *Pong) XXX_DiscardUnknown() {
	xxx_messageInfo_Pong.DiscardUnknown(m)
}

var xxx_messageInfo_Pong proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("network.IdentityMsg_Role", IdentityMsg_Role_name, IdentityMsg_Role_value)
	proto.RegisterType((*PeerInfo)(nil), "network.PeerInfo")
	proto.RegisterType((*SignedPeerInfo)(nil), "network.SignedPeerInfo")
	proto.RegisterType((*FullNodePayload)(nil), "network.FullNodePayload")
	proto.RegisterType((*SignedFullNodePayload)(nil), "network.SignedFullNodePayload")
	proto.RegisterType((*Note)(nil), "network.Note")
	proto.RegisterType((*DiscoveryMsg)(nil), "network.DiscoveryMsg")
	proto.RegisterType((*IdentityMsg)(nil), "network.IdentityMsg")
	proto.RegisterType((*Ping)(nil), "network.Ping")
	proto.RegisterType((*Pong)(nil), "network.Pong")
}

func init() { proto.RegisterFile("network.proto", fileDescriptor_8571034d60397816) }

var fileDescriptor_8571034d60397816 = []byte{
	// 418 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0xdd, 0x6e, 0x13, 0x31,
	0x10, 0x85, 0xd9, 0x66, 0x9b, 0x34, 0x93, 0x1f, 0x22, 0x43, 0xd5, 0x45, 0x20, 0x14, 0x19, 0x2e,
	0x72, 0x43, 0x90, 0x52, 0x89, 0xfb, 0x48, 0xa1, 0x52, 0xd4, 0x90, 0x44, 0x2e, 0x3f, 0x97, 0xab,
	0x10, 0x4f, 0x96, 0x15, 0x96, 0x67, 0x65, 0x3b, 0xa0, 0xbe, 0x13, 0x6f, 0xc0, 0xcb, 0x21, 0x7b,
	0xb3, 0x5b, 0x1a, 0x51, 0x71, 0xb5, 0x7b, 0x66, 0xec, 0x6f, 0xce, 0x19, 0x19, 0x7a, 0x1a, 0xdd,
	0x4f, 0x32, 0xdf, 0xc7, 0x85, 0x21, 0x47, 0xac, 0x75, 0x90, 0xfc, 0x1d, 0x9c, 0xad, 0x11, 0xcd,
	0x5c, 0xef, 0x88, 0x3d, 0x85, 0x53, 0x2c, 0x68, 0xfb, 0x2d, 0x89, 0x86, 0xd1, 0x28, 0x16, 0xa5,
	0xf0, 0xd5, 0x8d, 0x94, 0xc6, 0x26, 0x27, 0xc3, 0xc6, 0xa8, 0x2b, 0x4a, 0xc1, 0xaf, 0xa1, 0x7f,
	0x93, 0x67, 0x1a, 0x65, 0x7d, 0xfb, 0x39, 0xb4, 0x0b, 0x44, 0x93, 0xe6, 0x7a, 0x47, 0x81, 0xd0,
	0x15, 0x67, 0x45, 0xd5, 0x7c, 0x01, 0x6d, 0x9b, 0x67, 0x7a, 0xe3, 0xf6, 0x06, 0x93, 0x93, 0xd0,
	0xbc, 0x2b, 0xf0, 0x6b, 0x78, 0x7c, 0xb5, 0x57, 0x6a, 0x49, 0x12, 0xd7, 0x9b, 0x5b, 0x45, 0x1b,
	0xf9, 0x80, 0x17, 0x0e, 0x3d, 0xa9, 0x6d, 0x6a, 0x11, 0x65, 0xea, 0x7d, 0x1c, 0x50, 0x1d, 0xa9,
	0xed, 0x0d, 0xa2, 0x9c, 0x4a, 0x69, 0xf8, 0x0a, 0xce, 0x4b, 0x67, 0xc7, 0xc8, 0x04, 0x5a, 0x45,
	0xf9, 0x7b, 0xb0, 0x57, 0xc9, 0xff, 0xb8, 0xfb, 0x1d, 0x41, 0xbc, 0x24, 0x87, 0xec, 0x02, 0x5a,
	0x65, 0xc2, 0x0a, 0xd0, 0x0c, 0xf9, 0x24, 0x9b, 0xc2, 0xc0, 0x86, 0x91, 0xe9, 0xdd, 0x06, 0x3c,
	0xa6, 0x33, 0xb9, 0x18, 0x57, 0x7b, 0xbf, 0xbf, 0x2d, 0xd1, 0xb7, 0xf7, 0xb7, 0xf7, 0x05, 0x92,
	0x03, 0x62, 0xb7, 0x57, 0x2a, 0xd5, 0x24, 0x31, 0xad, 0xdc, 0x36, 0x02, 0xea, 0xe5, 0x11, 0xea,
	0x28, 0x9e, 0x38, 0xb7, 0xff, 0x2a, 0xf3, 0x4b, 0xe8, 0xce, 0x72, 0xbb, 0xa5, 0x1f, 0x68, 0x6e,
	0x3f, 0xd8, 0x8c, 0xbd, 0x82, 0x53, 0x4d, 0x0e, 0x6d, 0x12, 0x0d, 0x1b, 0xa3, 0xce, 0xa4, 0x57,
	0x53, 0x7d, 0x44, 0x51, 0xf6, 0xf8, 0xaf, 0x08, 0x3a, 0x73, 0x89, 0xda, 0xe5, 0x2e, 0x5c, 0x7a,
	0x30, 0xf9, 0x5b, 0x78, 0x62, 0xf7, 0x45, 0x41, 0xc6, 0xf9, 0xf0, 0xfe, 0x69, 0x6d, 0x49, 0x55,
	0x4f, 0x85, 0xd5, 0xad, 0x75, 0xd5, 0x61, 0x6f, 0x20, 0x36, 0xa4, 0x30, 0x64, 0xea, 0x4f, 0x9e,
	0xd5, 0xd3, 0xff, 0x9a, 0x36, 0x16, 0xa4, 0x50, 0x84, 0x63, 0xfc, 0x35, 0xc4, 0x5e, 0xb1, 0x1e,
	0xb4, 0x3f, 0x4f, 0x17, 0xf3, 0xd9, 0xf4, 0xe3, 0x4a, 0x0c, 0x1e, 0x79, 0x79, 0xf5, 0x69, 0xb1,
	0x48, 0x97, 0xab, 0xd9, 0xfb, 0x41, 0xc4, 0x9b, 0x10, 0xaf, 0x73, 0x9d, 0x85, 0x2f, 0xe9, 0xec,
	0x6b, 0x33, 0x38, 0xb9, 0xfc, 0x13, 0x00, 0x00, 0xff, 0xff, 0xb6, 0xc6, 0xce, 0x3a, 0xf5, 0x02,
	0x00, 0x00,
}
